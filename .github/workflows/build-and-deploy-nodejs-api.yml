name: build-and-deploy-nodejs-api
on:
  workflow_call:
    inputs:
      webtier:
        required: true
        type: string
      node_version:
        required: true
        type: string

jobs:
  build-and-deploy-nodejs-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: build
        run: yarn build:${{ inputs.webtier }}

      # These environment vars are specific to sb
      - name: set package version
        run: echo PACKAGE_VERSION=$(jq --raw-output ".version" package.json) >> $GITHUB_ENV

      - name: set main version
        run: echo VERSION=${{ env.PACKAGE_VERSION }}-beta.${{ github.run_attempt }} >> $GITHUB_ENV

      - name: set Docker image tag
        run: echo IMAGE_TAG=${{ env.AWS_REGISTRY_URL }}/${{ github.event.repository.name }}:${{ env.VERSION }} >> $GITHUB_ENV

      - name: set Tier Pointer tag
        run: echo TIER_POINTER_TAG=${{ env.AWS_REGISTRY_URL }}/${{ github.event.repository.name }}:${{ env.WEBTIER }} >> $GITHUB_ENV

      - name: set K8S Name
        run: echo K8S_NAME=$(echo ${{github.event.repository.name }} | tr _ -) >> $GITHUB_ENV

      # TODO: Version check

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          build-args: webtier=${{ env.WEBTIER }}
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_TAG }}
            ${{ env.TIER_POINTER_TAG }}
