name: build-and-deploy-nodejs-batch
on:
  workflow_call:
    inputs:
      webtier:
        required: true
        type: string
      node_version:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true

jobs:
  build-and-deploy-nodejs-batch:
    runs-on: ubuntu-latest
    env:
      AWS_REGISTRY_URL: 165158508528.dkr.ecr.us-east-1.amazonaws.com
      K8S_CLUSTER: k8s.vmit.cucloud.net

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # These environment vars are specific to sb
      - name: set package version
        run: echo PACKAGE_VERSION=$(jq --raw-output ".version" package.json) >> $GITHUB_ENV

      - name: Get Prod Version
        run: echo PROD_VERSION=$(aws ecr describe-images --repository-name ${{ github.event.repository.name }} | jq --raw-output '.imageDetails[] | .imageTags | select(.[1]) | select(.[0] == "prod" or .[1] == "prod") | if .[1] == "prod" then .[0] else .[1] end') >> $GITHUB_ENV
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: "us-east-1"

      - name: Print versions
        run: echo Package Version is ${{ env.PACKAGE_VERSION }} and production Version is ${{ env.PROD_VERSION }}

      - name: Exit if equal
        if: ${{ env.PACKAGE_VERSION == env.PROD_VERSION }}
        run: |
          echo 'CTRL-Z!  You forgot to bump your version number, comrade!  Edit the version number in package.json and commit to re-run.'
          this_command_doesnt_exist_so_exit

      - uses: actions/setup-node@v3
        with:
          node-version: ${{ inputs.node_version }}

      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: build
        run: yarn build:${{ inputs.webtier }}

      - name: set main version for sb
        run: echo VERSION=${{ env.PACKAGE_VERSION }}-beta.${{ github.run_number }} >> $GITHUB_ENV
        if: ${{ inputs.webtier == 'sb'}}

      - name: set main version for prod
        run: echo VERSION=${{ env.PACKAGE_VERSION }} >> $GITHUB_ENV
        if: ${{ inputs.webtier == 'prod'}}

      - name: set Docker image tag
        run: echo IMAGE_TAG=${{ env.AWS_REGISTRY_URL }}/${{ github.event.repository.name }}:${{ env.VERSION }} >> $GITHUB_ENV

      - name: set Tier Pointer tag
        run: echo TIER_POINTER_TAG=${{ env.AWS_REGISTRY_URL }}/${{ github.event.repository.name }}:${{ inputs.webtier }} >> $GITHUB_ENV

      - name: set K8S Name
        run: echo K8S_NAME=$(echo ${{github.event.repository.name }} | tr _ -) >> $GITHUB_ENV

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Create repo if doesn't exist (ECR)
        uses: int128/create-ecr-repository-action@v1
        with:
          repository: ${{ github.event.repository.name }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          build-args: |
            webtier=${{ inputs.webtier }}
            aws_access_key_id=${{ secrets.aws_access_key_id }}
            aws_secret_access_key=${{ secrets.aws_secret_access_key }}
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_TAG }}
            ${{ env.TIER_POINTER_TAG }}
